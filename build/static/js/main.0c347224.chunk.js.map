{"version":3,"sources":["components/Form.js","components/Person.js","components/Filter.js","services/contactservice.js","components/Notification.js","components/Button.js","App.js","index.js"],"names":["Form","props","onSubmit","value","personValue","onChange","onPersonChange","required","numberValue","onNumberChange","name","type","Person","className","number","Filter","data","filtered","filterValue","onFilterChange","map","p","id","baseUrl","axios","get","then","response","contactObject","post","delete","updateObject","put","Notify","contactName","tag","message","ButtonDelete","onClick","window","confirm","contactservice","notif","updateNotif","setTimeout","catch","App","useState","persons","setPersons","filterPersons","setFilter","newName","setNewName","newNumber","setNumber","findName","setFindName","notification","setNotification","useEffect","contact","e","target","preventDefault","person","hasDuplicates","find","current","concat","classname","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c347224.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n    <form onSubmit={props.onSubmit}>\r\n        <div>\r\n                Name: <input value={props.personValue} onChange={props.onPersonChange} required=\"required\" />\r\n        </div>\r\n        <div>\r\n                Number: <input value={props.numberValue} onChange={props.onNumberChange} required=\"required\"/>\r\n        </div>\r\n        <div>\r\n            <button name=\"submit\" type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n\r\nconst Person = (props) => {\r\n\r\n    return (\r\n        <p className=\"inline\">\r\n            {`${props.name} - ${props.number}`}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Filter = (props) => {\r\n    let data = props.filtered\r\n    return (\r\n    <div>\r\n        <h1> Filter </h1>\r\n            Search: <input className=\"inline\" value={props.filterValue} onChange={props.onFilterChange} />\r\n        \r\n        {data ? \r\n        data.map((p) => \r\n            <p key={p.id}>\r\n                {`${p.name} - ${p.number} `}\r\n            </p>)\r\n        : <p>Loading...</p>\r\n        }\r\n    </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Filter;","import axios from \"axios\";\r\nimport React from \"react\";\r\n// const baseUrl = `http://localhost:3001/api/persons`\r\nconst baseUrl = `/api/persons`\r\n\r\nconst addContact = contactObject => {\r\n    const request = axios.post(baseUrl,contactObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = id => {\r\n    const request = axios.delete(baseUrl + `/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateContact = (id, updateObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updateObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getContact = name => {\r\n    const request = axios.get(baseUrl + `?name_like=${name}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getContact, addContact, deleteContact, updateContact}","\r\n\r\nimport React from \"react\";\r\nimport '../App.css';\r\n\r\nconst Notify = ({contactName, tag, message}) => {\r\n    if (tag === null)\r\n        return <div></div>\r\n    \r\n    if (tag === \"Success\") {\r\n        return (\r\n            <div className=\"notification success\">\r\n                {`${contactName} ${message}`}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (tag === \"Error\") {\r\n        return (\r\n            <div className=\"notification\">\r\n                <p className=\"error\"> {contactName} {message} </p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Notify;","\r\nimport React from 'react';\r\nimport contactservice from '../services/contactservice';\r\n\r\n\r\nconst ButtonDelete = props => {\r\n    const deleteButton = () => {\r\n        let confirmMessage = window.confirm(`Are sure you want to delete ${props.name}?`)\r\n\r\n        if (confirmMessage) {\r\n            contactservice\r\n                .deleteContact(props.id)\r\n                .then(() => {\r\n                    const notif = {\r\n                        contactName: props.name,\r\n                        tag: 'Success',\r\n                        message: 'succesfully deleted!'\r\n                    }\r\n                    props.updateNotif(notif)\r\n                    setTimeout(() => {\r\n                        props.updateNotif(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(() => {\r\n                    const notif = {\r\n                        contactName: props.name,\r\n                        tag: 'Error',\r\n                        message: 'was already deleted to the server!'\r\n                    }\r\n                    props.updateNotif(notif)\r\n                    setTimeout(() => {\r\n                        props.updateNotif(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n    return <button className=\"delete\" onClick={deleteButton}>Delete</button>\r\n}\r\n\r\nexport default ButtonDelete;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form.js';\nimport Person from './components/Person';\nimport Filter from './components/Filter.js';\nimport axios from 'axios';\nimport contactservice from './services/contactservice';\nimport Notify from './components/Notification';\nimport ButtonDelete from './components/Button';\n\n\n\nfunction App () {\n\n  const [persons, setPersons] = useState([])\n\n  const [filterPersons, setFilter] = useState(null)\n\n  const [newName, setNewName] = useState('')\n\n  const [newNumber, setNumber] = useState('')\n\n  const [findName, setFindName] = useState(null)\n\n  const [notification, setNotification] = useState(null)\n\n  useEffect( () => {\n    axios\n      .get(\"http://localhost:3001/api/persons\")\n      .then((response) => {\n        const contact = response.data\n        setPersons(contact)\n      })\n  },[persons])\n\n\n  useEffect(() => {\n    contactservice\n      .getContact(findName)\n      .then(data => {\n        setFilter(data)\n      })\n  }, [findName])\n\n  const addPerson = (e) => {\n    e.preventDefault()\n\n    const person = {\n      number: newNumber,\n      name: newName,\n    }\n    \n    let hasDuplicates = persons.find(current => current.name === person.name)\n\n    if(hasDuplicates) {\n      let update = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\n      if (update) {\n        contactservice\n          .updateContact(hasDuplicates.id, person)\n          .then((data) => {\n            setPersons(persons.map(person => person.id !== hasDuplicates.id ? person : data))\n            const notif = {\n              contactName: newName,\n              tag: 'Success',\n              message: 'succesfully updated!'\n            }\n            setNotification(notif)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(() => {\n            const notif = {\n              contactName: newName,\n              tag: 'Error',\n              message: 'was already deleted to the server!'\n            }\n            setNotification(notif)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n\n    } else {\n\n      contactservice\n        .addContact(person)\n        .then(data => setPersons(persons.concat(data)))\n        .then(() => {\n              const notif = {\n                contactName: newName,\n                tag: 'Success',\n                message: 'succesfully added!'\n              }\n          setNotification(notif)\n          setTimeout(() => {\n          setNotification(null)\n          }, 5000)\n        })\n\n    setNewName('')\n    setNumber('')\n    }\n  }\n\n\n  return (\n    <div>\n      {/* Filter */}\n      <Filter \n        filterValue={findName}\n        onFilterChange={(e) => setFindName(e.target.value)}\n        filtered={filterPersons}/>\n\n\n      {/* Phonebook */}\n\n      {notification ?\n        <Notify tag={notification.tag} message={notification.message} contactName={notification.contactName}/> : null }\n      <h2>Phonebook</h2>\n      <Form \n        onSubmit={addPerson}\n        personValue={newName} \n        onPersonChange= {(e) => setNewName(e.target.value)}\n        numberValue={newNumber}\n        onNumberChange= {(e) => setNumber(e.target.value)} />\n      \n      {/* Numbers */}\n      <h2>Numbers</h2>\n      {persons.map((person) => {\n        return (\n          <div classname=\"margin-bottom-10px\" key={person.id}>\n        <Person  name={person.name} number={person.number}/>\n        <ButtonDelete id={person.id} name={person.name} updateNotif={notif => setNotification(notif)}/>\n        </div>\n        )\n      }\n      )}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst contact = [\n  {\n    id: 1,\n    name: 'Arto Hellas',\n    number: '0000',\n  },\n  {\n    id: 2,\n    name: 'John Doe',\n    number: '1111',\n  },\n]\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}